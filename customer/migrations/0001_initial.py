# Generated by Django 2.0.5 on 2020-06-13 11:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bin_id', models.CharField(max_length=30)),
                ('level', models.CharField(max_length=30)),
                ('code', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Bin',
                'verbose_name_plural': 'Bins',
                'ordering': ['-bin_id'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('area', models.CharField(max_length=30)),
                ('street', models.CharField(max_length=30)),
                ('zone', models.CharField(max_length=30)),
                ('house_no', models.CharField(max_length=30)),
                ('service_type', models.CharField(max_length=30)),
                ('rate', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='Please enter a valid phone number.', regex='^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$')])),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['-last_name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_period', models.CharField(choices=[('per_pickup', 'Per Pick-Up'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='period', max_length=10)),
                ('amount_paid', models.IntegerField(default=15)),
                ('payment_type', models.CharField(choices=[('mobile_money', 'Mobile Money'), ('cash', 'Cash')], default='payment_period', max_length=10)),
                ('date_of_payment', models.DateTimeField(auto_now=True)),
                ('remarks', models.CharField(max_length=30)),
                ('collector', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collector_name', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_record', to='customer.Customer')),
            ],
            options={
                'verbose_name': 'Payment Record',
                'verbose_name_plural': 'Payment Records',
                'ordering': ['-payment_period'],
            },
        ),
        migrations.AddField(
            model_name='bin',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bin', to='customer.Customer'),
        ),
    ]
